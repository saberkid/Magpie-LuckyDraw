{"version":3,"sources":["component/background/bg.jpeg","component/header/albird.svg","component/background/index.js","component/header/index.js","component/footer/index.js","component/start/index.js","redux/actions/_actions.js","model/Participant.js","component/lottery-pool/index.js","_data/mockParticipants.js","redux/actions/lotteryPool.jsx","service/DrawService.js","utils/phone_mask.js","component/common/tag-cloud/index.js","component/lottery-drawing/index.js","component/lottery-edit/lottery-editable-table.js","redux/actions/lotteryDrawing.jsx","component/lottery-edit/index.js","component/lottery-setting/index.js","component/activity-setting/index.js","redux/actions/activitySetting.jsx","component/result/index.js","redux/reducers/lotteryPool.jsx","redux/reducers/activitySetting.jsx","redux/reducers/lotteryDrawing.jsx","redux/reducers/index.jsx","redux/store/index.jsx","app/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","Background","className","this","props","showBackground","params","style","position","background","backgroundImage","logo","backgroundSize","pointerEvents","children","Component","Header","activityName","connect","state","dataReducer","activitySetting","name","Footer","Date","getFullYear","target","href","Start","to","Participant","phone","str","array","split","test","Error","participant","LotteryPool","next","history","push","verifyParticipantsInput","Promise","resolve","reject","filter","item","replace","length","map","fromString","err","onTextChange","setState","allParticipantsInput","verifyParticipants","saveNameList","then","allParticipants","setLotteryPool","catch","error","loadDemoData","participantToString","join","icon","faQuestionCircle","onClick","id","multiple","required","placeholder","onChange","event","outlineColor","validParticipantCount","disabled","message","lotteryPool","Action","DrawService","noDuplicate","isRolling","isPickBlocked","clearInterval","timer","all","setInterval","change","bind","oneItemIndex","splice","index","Math","floor","currentlySelectedIndex","currentlySelectedItem","onSelectedChangedCallback","callback","onPickBlockedChangedCallback","blocked","setPickBlocked","setTimeout","removeItem","instance","symbol","substr","class","$","window","TagCloud","settings","entries","tags","slice","tag","label","radius","radiusMin","bgDraw","opacityOver","opacityOut","opacitySpeed","fov","fontFamily","fontSize","fontColor","fontWeight","fontStyle","fontStretch","fontToUpperCase","$el","el","svg3DTagCloud","ref","React","LotteryDrawing","noPrize","isPrizeChanged","computeCurrentPrize","drawService","pickOneThenDo","selected","prize","currentPrize","addWinner","rollUp","console","getCurrentPrize","items","winners","winner","totalCount","lotteryDrawing","setting","find","lottery","existingCountOfCurrentPrize","getTitle","title","getContent","selectedParticipant","maskPhone","getButton","btnDisabled","element","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","totalLotteryCount","reduce","sum","l","alert","goBack","launchFullscreen","document","documentElement","from","setOnSelectedChangedCallback","selectedItem","setNoDuplicate","setOnPickBlockedChangedCallback","uuidv4","require","DragHandle","SortableHandle","faBars","SortableList","SortableContainer","onItemChange","SortableItem","SortableElement","sortIndex","key","defaultValue","onBlur","e","parseInt","faTrashAlt","LotteryEditableItem","onSortEnd","oldIndex","newIndex","setLottery","arrayMove","lotteries","nextProps","lotteryItemBodyRef","scrollTo","scrollHeight","useDragHandle","Object","assign","faPlusCircle","LotteryEdit","LotterySetting","ActivitySetting","onNameChange","setActivityName","Result","winnerList","winnerGroups","reverse","winnerGroup","prizeName","forEach","findIndex","action","initialState","combineReducers","composeEnhancers","composeWithDevTools","getStore","recoverFromStorage","createStore","serializedState","localStorage","getItem","JSON","parse","loadState","undefined","applyMiddleware","logger","App","saveState","stringify","setItem","confirmRecovered","confirm","store","subscribe","onbeforeunload","getState","Provider","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,+YCIrCC,G,MAAY,CACdC,OAAQ,CACNC,MAAO,IACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,OAGhBC,MAAO,CACLJ,MAAO,QAETK,MAAO,CACLC,KAAM,SACNC,OAAQ,CACNC,MAAO,EACPJ,MAAO,WAETK,QAAS,CACPC,SAAU,GAEZC,MAAO,CACLC,IAAK,GACLJ,MAAO,IACPK,OAAQ,MAGZC,QAAS,CACPd,MAAO,EACPe,QAAQ,EACRC,KAAM,CACJd,OAAQ,EACRe,MAAO,GACPC,YAAa,GACbC,MAAM,IAGVC,KAAM,CACJpB,MAAO,EACPe,QAAQ,EACRC,KAAM,CACJd,QAAQ,EACRe,MAAO,GACPI,SAAU,EACVF,MAAM,IAGVG,YAAa,CACXpB,QAAQ,EACRqB,SAAU,IACVnB,MAAO,OACPU,QAAS,GACTN,MAAO,KA2BEgB,E,4JAvBb,WACE,OACE,yBAAKC,UAAW,wBACZC,KAAKC,MAAMC,gBAAkB,kBAAC,IAAD,CAC7BC,OAAQ,CACN/B,aAEFgC,MAAO,CACLC,SAAU,QACVvB,MAAO,OACPK,OAAQ,OACRmB,WAAY,UACZC,gBAAgB,OAAD,OAASC,IAAT,KACfC,eAAgB,QAChBC,cAAe,UAGlBV,KAAKC,MAAMU,c,GAlBKC,a,yBCtDnBC,E,4JACJ,WACE,OACC,4BAAQd,UAAWC,KAAKC,MAAMF,WAC5B,yBAAKjB,MAAO,GAAKK,OAAQ,GAAID,IAAKsB,MAClC,8BAAOR,KAAKC,MAAMa,mB,GALJF,aAcNG,eAJS,SAAAC,GAAK,MAAK,CAChCF,aAAcE,EAAMC,YAAYC,gBAAgBC,QAGnCJ,CAAyBF,GCPzBO,EATA,SAACnB,GAAD,OACT,4BAAQF,UAAWE,EAAMF,WAAzB,QACI,IAAIsB,MAAOC,cACb,kCAAO,uBAAGC,OAAO,SAASC,KAAK,yBAAxB,gBAAP,KAFF,uBAIE,mCAAQ,uBAAGD,OAAO,SAASC,KAAK,gDAAxB,UAAR,O,gBCOOC,G,kKAPb,WACE,OACE,6BAAK,kBAAC,IAAD,CAAMC,GAAG,oBAAoB3B,UAAU,sBAAvC,yD,GAHSa,c,QCNL,EACK,mBADL,EAED,aAFC,EAGM,oBAHN,EAIQ,sBCJFe,E,WACnB,WAAaR,EAAMS,GAAQ,oBACzB5B,KAAKmB,KAAOA,EACZnB,KAAK4B,MAAQA,E,4CAef,WACE,MAAM,GAAN,OAAU5B,KAAKmB,KAAf,aAAwBnB,KAAK4B,U,yBAd/B,SAAkBC,GAChB,IAAMC,EAAQD,EAAIE,MAAM,UAAW,GACnC,GAAGD,EAAM,IAAMA,EAAM,GAAI,CACvB,IAAM,qBAAqBE,KAAKF,EAAM,IACpC,MAAM,IAAIG,MAAJ,WAAcH,EAAM,GAApB,kFAER,OAAO,IAAIH,EAAYG,EAAM,GAAIA,EAAM,IAEzC,MAAM,IAAIG,MAAJ,WAAcJ,EAAd,6E,iCAER,SAA2BK,GACzB,MAAM,GAAN,OAAUA,EAAYf,KAAtB,aAA+Be,EAAYN,W,qBCLzCO,E,kDACJ,WAAYlC,GAAQ,IAAD,8BACjB,cAAMA,IAgDRmC,KAAO,WACL,EAAKnC,MAAMoC,QAAQC,KAAK,qBAlDP,EAqDnBC,wBAA0B,SAACjE,GACzB,OAAO,IAAIkE,SAAQ,SAACC,EAASC,GAC3B,IAIED,EAHwBnE,EAAMyD,MAAM,MACjCY,QAAO,SAAAC,GAAI,QAAMA,GAAoD,IAA5CA,EAAKC,QAAQ,eAAgB,IAAIC,UAC1DC,KAAI,SAAAH,GAAI,OAAIjB,EAAYqB,WAAWJ,OAEtC,MAAOK,GACPP,EAAOO,QA7DM,EAkEnBC,aAAe,SAAC5E,GACd,EAAK6E,SAAS,CACZC,qBAAsB9E,IACrB,WACD,EAAK+E,yBAtEU,EAyEnBC,aAAe,WACb,EAAKf,wBAAwB,EAAKvB,MAAMoC,sBACrCG,MAAK,SAAAC,GACJ,EAAKvD,MAAMwD,eAAeD,GAC1B,EAAKpB,UAENsB,OAAM,SAAAC,GACL,EAAKR,SAAS,CACZQ,cAjFW,EAsFnBC,aAAe,WACb,EAAKV,aCnGS,sdDcd,EAAKlC,MAAQ,CACX2C,MAAO1D,EAAMuD,iBAAmBvD,EAAMuD,gBAAgBV,OAAS,EAAI,GAAK,uCACxEM,qBAAsB,EAAKnD,MAAMuD,gBAAgBT,KAAI,SAAAb,GAAW,OAAIP,EAAYkC,oBAAoB3B,MAAc4B,KAAK,OAJxG,E,qDAQnB,WACE9D,KAAKqD,uB,oBAGP,WAAU,IAAD,OACP,OACE,yBAAKtD,UAAU,gBACb,kEACA,yKACE,0BAAMA,UAAW,aACf,kBAAC,IAAD,CAAiBgE,KAAMC,MACvB,uBAAGC,QAASjE,KAAK4D,cAAjB,0CAGJ,yBAAKM,GAAG,mBACN,8BACEA,GAAG,WACHtF,KAAK,OACLuF,UAAQ,EACRC,UAAQ,EACRC,YAAY,2BACZ/F,MAAO0B,KAAKgB,MAAMoC,qBAClBkB,SAAU,SAACC,GAAD,OAAW,EAAKrB,aAAaqB,EAAMhD,OAAOjD,QACpD8B,MAAO,CAAEoE,aAAcxE,KAAKgB,MAAM2C,MAAQ,UAAY,aAExD,yBAAK5D,UAAW,cACbC,KAAKgB,MAAM2C,OAAS,0BAAM5D,UAAW,WAAYC,KAAKgB,MAAM2C,OAC5D3D,KAAKgB,MAAMyD,uBACZ,oEAAYzE,KAAKgB,MAAMyD,yBAI3B,6BAAS1E,UAAW,YAClB,4BAAQ2E,WAAY1E,KAAKgB,MAAM2C,MAAO5D,UAAaC,KAAKgB,MAAM2C,MAAQ,UAAY,GAC1EM,QAASjE,KAAKsD,cADtB,Y,gCAiDR,WAAsB,IAAD,OACnBtD,KAAKuC,wBAAwBvC,KAAKgB,MAAMoC,sBACrCG,MAAK,SAACC,GACDA,EAAgBV,OAAS,EAC3B,EAAKK,SAAS,CACZQ,MAAO,GACPc,sBAAuBjB,EAAgBV,SAGzC,EAAKK,SAAS,CACZQ,MAAO,4CAIZD,OAAM,SAAAC,GACL,EAAKR,SAAS,CACZQ,MAAOA,EAAMgB,iB,GA3GG/D,aAwHXG,eAJS,SAAAC,GAAK,MAAK,CAChCwC,gBAAiBxC,EAAMC,YAAY2D,YAAYpB,mBAGT,CAAEC,eElInB,SAAAD,GAAe,MAAK,CACzC5E,KAAMiG,EACNrB,qBFgIazC,CAA6CoB,GGnIvC2C,E,WAInB,aAAe,oBACb9E,KAAK+E,aAAc,EACnB/E,KAAKgF,WAAY,EACjBhF,KAAKiF,eAAgB,E,0CAWvB,WACE,IAAKjF,KAAKgF,UAAW,CAEnB,GADAE,cAAclF,KAAKmF,OACK,IAApBnF,KAAKoF,IAAItC,OACX,MAAM,IAAIb,MAAM,mBAElBjC,KAAKgF,WAAY,EACjBhF,KAAKmF,MAAQE,YAAYrF,KAAKsF,OAAOC,KAAKvF,MAAO,IAEnD,OAAOA,O,wBAGT,SAAWwF,GACTxF,KAAKoF,IAAIK,OAAOD,EAAc,K,oBAGhC,WACE,IAAME,EAAQC,KAAKC,MAAMD,KAAKtG,SAAWW,KAAKoF,IAAItC,QAClD9C,KAAK6F,uBAAyBH,EAC9B1F,KAAK8F,sBAAwB9F,KAAKoF,IAAIM,GACtC1F,KAAK+F,0BAA0B/F,KAAK8F,yB,0CAGtC,SAA6BE,GAE3B,OADAhG,KAAK+F,0BAA4BC,EAC1BhG,O,6CAET,SAAgCgG,GAE9B,OADAhG,KAAKiG,6BAA+BD,EAC7BhG,O,4BAGT,WAAoC,IAArB+E,IAAoB,yDAEjC,OADA/E,KAAK+E,YAAcA,EACZ/E,O,4BAGT,SAAekG,GACblG,KAAKiF,cAAgBiB,EACrBlG,KAAKiG,6BAA6BC,K,2BAEpC,SAAcF,GAAW,IAAD,OAEjBhG,KAAKiF,gBACRjF,KAAKmG,gBAAe,GACpBC,WAAY,WACVlB,cAAc,EAAKC,OACf,EAAKJ,aACP,EAAKsB,WAAW,EAAKR,wBAEvBG,EAAS,EAAKF,uBACd,EAAKd,WAAY,EACjB,EAAKmB,gBAAe,IACnBZ,KAAKvF,MAAO,IAAMA,U,mBA7DzB,SAAYoF,GAKV,OAJKN,EAAYwB,WACfxB,EAAYwB,SAAW,IAAIxB,GAE7BA,EAAYwB,SAASlB,IAAMA,EACpBN,EAAYwB,a,KCdR,WAAC1E,EAAO2E,GACrB,OAAQ,6BACC3E,EAAM4E,OAAO,EAAG,GACjB,0BAAMC,MAAM,QAAQF,GACnB3E,EAAM4E,OAAO,EAAG,MCHrBE,EAAIC,OAAOD,EA0CFE,E,uKAvCb,WACE,IAIMC,EAAW,CACfC,SALkB9G,KAAKC,MAAM8G,KAAKjE,OAAS,IAAM9C,KAAKC,MAAM8G,KAAKC,MAAM,EAAG,KAAOhH,KAAKC,MAAM8G,MAClEhE,KAAI,SAAAkE,GAAG,MAAK,CACtCC,MAAOD,MAIPnI,MAAO,KACPK,OAAQ,KACRgI,OAAQ,MACRC,UAAW,GACXC,QAAQ,EACRC,YAAa,IACbC,WAAY,IACZC,aAAc,EACdC,IAAK,IACLlI,MAAO,GACPmI,WAAY,4BACZC,SAAU,KACVC,UAAW,OACXC,WAAY,SACZC,UAAW,SACXC,YAAa,SACbC,iBAAiB,GAEnBhI,KAAKiI,IAAMvB,EAAE1G,KAAKkI,IAClBlI,KAAKiI,IAAIE,cAAetB,K,oBAG1B,WAAU,IAAD,OACP,OACI,yBAAK9G,UAAU,YAAYqI,IAAK,SAAAF,GAAE,OAAI,EAAKA,GAAKA,S,GAhCjCG,IAAMzH,WCMvB0H,G,wDACJ,WAAYrI,GAAQ,IAAD,8BACjB,cAAMA,IA6BRgE,QAAU,WACR,GAAI,EAAKjD,MAAMuH,QACb,EAAKtI,MAAMoC,QAAQC,KAAK,eACnB,CACL,GAAI,EAAKtB,MAAMwH,eAKb,OAJA,EAAKrF,SAAS,CACZqF,gBAAgB,SAElB,EAAKC,sBAGP,IACM,EAAKC,YAAY1D,UACnB,EAAK0D,YAAYC,eAAc,SAACC,GAC9BA,EAASC,MAAQ,EAAK7H,MAAM8H,aAC5B,EAAK7I,MAAM8I,UAAUH,GACrB,EAAKH,yBAGP,EAAKC,YAAYM,SAEnB,MAAO/F,GACPgG,QAAQtF,MAAMV,EAAI0B,YApDL,EA0DnBuE,gBAAkB,SAAC9G,GACjB,IAAM+G,EAAQ,EAAKlJ,MAAM2E,YAAYwE,QAAQzG,QAAO,SAAA0G,GAAM,OAAKA,EAAOR,MAAM3E,KAAO,EAAKlD,MAAM8H,aAAa5E,MAC3G,OAAK9B,IAAS,EAAKpB,MAAM8H,aAAaQ,WAAaH,EAAMrG,QAAU,IAAM,GAAK,EAAK9B,MAAM8H,cACtB,KAA5D,EAAK9H,MAAM8H,aAAaQ,WAAaH,EAAMrG,QAAU,IACxD,EAAKK,SAAS,CACZqF,gBAAgB,IAGb,EAAKxH,MAAM8H,cAGb,EAAK7I,MAAMsJ,eAAeC,QAAQC,MAAK,SAACC,GAC3C,IAAMP,EAAQ,EAAKlJ,MAAM2E,YAAYwE,QAAQzG,QAAO,SAAA0G,GAAM,OAAKA,EAAOR,MAAM3E,KAAOwF,EAAQxF,MAC3F,SAAKwF,EAAQJ,WAAaH,EAAMrG,QAAU,IAAM,OAvEnC,EA8EnB2F,oBAAsB,WACpB,IAAMK,EAAe,EAAKI,gBAAgB,EAAKlI,MAAMwH,gBACrD,GAAIM,EAAc,CAChB,IAAMa,EAA8B,EAAK1J,MAAM2E,YAAYwE,QAAQzG,QAAO,SAAA0G,GAAM,OAAIA,EAAOR,MAAM3E,KAAO4E,EAAa5E,MAAIpB,OACzH,EAAKK,SAAS,CACZ2F,eACAa,qCAGF,EAAKxG,SAAS,CACZoF,SAAS,IAGb,OAAOO,GA3FU,EA6FnBc,SAAW,WACT,OAA+C,IAA3C,EAAK5I,MAAM2I,6BAAsC,EAAK3I,MAAMwH,eAEtD,EAAKxH,MAAMuH,QACZ,GAEH,GAAN,OAAU,EAAKvH,MAAM8H,aAAae,MAAlC,YAA2C,EAAK7I,MAAM2I,4BAAtD,cAAuF,EAAK3I,MAAM8H,aAAaQ,WAA/G,KAJQ,GAAN,OAAU,EAAKtI,MAAM8H,aAAae,MAAlC,YAA2C,EAAK7I,MAAM8H,aAAaQ,WAAnE,YA/Fe,EAsGnBQ,WAAa,WACX,OAAK,EAAK9I,MAAM+I,oBAAoBnI,QAAqD,IAA3C,EAAKZ,MAAM2I,6BAAsC,EAAKjB,YAAY1D,WAAc,EAAKhE,MAAMwH,gBAE/H,EAAKxH,MAAMuH,QACZ,2BAED,yBAAKxI,UAAU,uBACrB,yBAAKA,UAAU,QAAQ,EAAKiB,MAAM+I,oBAAoB5I,MACtD,yBAAKpB,UAAU,SAASiK,EAAU,EAAKhJ,MAAM+I,oBAAoBnI,MAAO,sDANjE,4BAxGQ,EAkHnBqI,UAAY,WACV,OAAI,EAAKjJ,MAAMuH,QACN,2BACE,EAAKG,YACP,EAAKA,YAAY1D,UAAY,OAAU,EAAKhE,MAAMwH,eAAiB,OAAS,QAE5E,IArHT,EAAKxH,MAAQ,CACX+I,oBAAqB,GACrBjB,aAAc,GACdN,gBAAgB,EAChB0B,aAAa,GAPE,E,0CAWnB,WACE,OACE,yBAAKnK,UAAW,mBACd,yBAAKA,UAAU,wBACb,kBAAC,EAAD,CAAUgH,KAAM/G,KAAKC,MAAMuD,gBAAgBT,KAAI,SAAAb,GAAW,OAAIA,EAAYf,WAE5E,6BACE,4BAAQpB,UAAW,eAChBC,KAAK4J,YAER,yBAAK7J,UAAW,WACbC,KAAK8J,cAER,4BAAQ/J,UAAWC,KAAKgB,MAAMkJ,YAAc,OAAS,GAAIxF,SAAU1E,KAAKgB,MAAMkJ,YAAajG,QAASjE,KAAKiE,QAAQsB,KAAKvF,OAAQA,KAAKiK,iB,8BAmG3I,SAAiBE,GACXA,EAAQC,kBACVD,EAAQC,oBACCD,EAAQE,qBACjBF,EAAQE,uBACCF,EAAQG,wBACjBH,EAAQG,0BACCH,EAAQI,qBACjBJ,EAAQI,wB,+BAIZ,WAAqB,IAAD,OACZC,EAAoBxK,KAAKC,MAAMsJ,eAAeC,QAAQiB,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,EAAErB,aAAa,GACrG,GAAItJ,KAAKC,MAAMuD,gBAAgBV,OAAS0H,EAGtC,OAFAI,MAAM,+DACN5K,KAAKC,MAAMoC,QAAQwI,SAGrB7K,KAAK8K,iBAAiBC,SAASC,iBAC/BhL,KAAK0I,YAAc5D,EAAYmG,KAAKjL,KAAKC,MAAMuD,iBAC5C0H,8BAA6B,SAACC,GAC7B,EAAKhI,SAAS,CACZ4G,oBAAqBoB,OAGxBC,gBAAe,GACfC,iCAAgC,SAACnF,GAChC,EAAK/C,SAAS,CACZ+G,YAAahE,OAGnBlG,KAAKyI,0B,GA5JoB7H,cAyKdG,eALS,SAAAC,GAAK,MAAK,CAChCwC,gBAAiBxC,EAAMC,YAAY2D,YAAYpB,gBAC/CoB,YAAa5D,EAAMC,YAAY2D,YAC/B2E,eAAgBvI,EAAMC,YAAYsI,kBAEI,CAAER,UJ7KxB,SAAAM,GAAM,MAAK,CAC3BzK,KAAMiG,EACNwE,YI2KatI,CAAwCuH,G,sBC5KjDgD,EAASC,EAAQ,IAEjBC,EAAaC,aAAe,kBAAM,kBAAC,IAAD,CAAiB1H,KAAM2H,IAAQhM,KAAM,GAAIK,UAAW,mBACtF4L,EAAeC,aAAkB,YAA8B,IAA3BzC,EAA0B,EAA1BA,MAAO0C,EAAmB,EAAnBA,aACzCC,EAAeC,aAAgB,gBAAGzN,EAAH,EAAGA,MAAO0N,EAAV,EAAUA,UAAV,OACnC,yBAAKC,IAAKD,EAAWjM,UAAU,gBAC7B,kBAACyL,EAAD,MACA,yBAAKzL,UAAU,qBACb,2BACEnB,KAAM,OACNsN,aAAc5N,EAAMuL,MACpBsC,OAAQ,SAAAC,GACNjD,EAAMM,MAAK,SAAAC,GAAO,OAAIA,EAAQxF,KAAO5F,EAAM4F,MAAI2F,MAAQuC,EAAE7K,OAAOjD,MAChEuN,EAAa1C,OAGnB,yBAAKpJ,UAAU,sBACb,2BACEnB,KAAM,SACNsN,aAAc5N,EAAMgL,WACpB6C,OAAQ,SAAAC,GACNjD,EAAMM,MAAK,SAAAC,GAAO,OAAIA,EAAQxF,KAAO5F,EAAM4F,MAAIoF,WAAa+C,SAASD,EAAE7K,OAAOjD,OAC9EuN,EAAa1C,OAInB,yBAAKpJ,UAAU,sBACVkE,QAAS,WACPkF,EAAQA,EAAMxG,QAAO,SAAA+G,GAAO,OAAIA,EAAQxF,KAAO5F,EAAM4F,MACrD2H,EAAa1C,KAGlB,kBAAC,IAAD,CACEpF,KAAMuI,WAId,OACE,6BACGnD,EAAMpG,KAAI,SAACzE,EAAOoH,GAAR,OACT,kBAACoG,EAAD,CACEG,IAAG,eAAUvG,GACbA,MAAOA,EACPpH,MAAOA,EACP0N,UAAWtG,WAOf6G,E,4MAUJC,UAAY,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACvB,EAAKzM,MAAM0M,WAAWC,YAAU,EAAK3M,MAAM4M,UAAWJ,EAAUC,K,+DATlE,SAA0BI,GAAY,IAAD,OACnC1G,YAAW,WACL,EAAK2G,oBACP,EAAKA,mBAAmBC,SAAS,EAAKD,mBAAmBE,aAAc,EAAKF,mBAAmBE,gBAEhG,O,oBAOL,WAAU,IAAD,OACP,OACE,6BACE,yBAAKlN,UAAW,oBAAqBqI,IAAK,SAAAF,GAAE,OAAI,EAAK6E,mBAAqB7E,IACxE,kBAACyD,EAAD,CACEuB,eAAa,EACb/D,MAAOnJ,KAAKC,MAAM4M,UAClBhB,aAAc,SAAA1C,GAAK,OAAI,EAAKlJ,MAAM0M,WAAWQ,OAAOC,OAAO,GAAIjE,KAC/DqD,UAAWxM,KAAKwM,UAAUjH,KAAKvF,SAEnC,yBAAKD,UAAU,mBACVkE,QAAS,WACP,IAAMkF,EAAQ,EAAKlJ,MAAM4M,UACzB1D,EAAM7G,KAAK,CACT4B,GAAIoH,IACJzB,MAAO,qBACPP,WAAY,IAEd,EAAKrJ,MAAM0M,WAAWQ,OAAOC,OAAO,GAAIjE,MAG7C,kBAAC,IAAD,CACEpF,KAAMsJ,MAZV,iC,GAxB0BhF,IAAMzH,WAoDzBG,eAJS,SAAAC,GAAK,MAAK,CAChC6L,UAAW7L,EAAMC,YAAYsI,eAAeC,WAGN,CAAEmD,WC7GvB,SAAAjD,GAAO,MAAK,CAC7B9K,KAAMiG,EACN6E,aD2Ga3I,CAAyCwL,GE5FxCe,E,4JAbd,WACE,OAAQ,6BACN,yBAAKvN,UAAU,oBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,qBAAf,gBACA,yBAAKA,UAAU,sBAAf,iBAEF,kBAAC,EAAD,Y,GARkBsI,IAAMzH,WC2BjB2M,E,kDA1Bb,WAAYtN,GAAQ,IAAD,8BACjB,cAAMA,IAoBRmC,KAAO,WACL,EAAKnC,MAAMoC,QAAQC,KAAK,qBApBxB,EAAKtB,MAAQ,CACX2C,MAAO,IAHQ,E,0CAOnB,WACE,OACE,yBAAK5D,UAAU,mBACb,4DACA,6BAASA,UAAU,gBACjB,kBAAC,EAAD,OAEF,6BAASA,UAAW,YAClB,4BAAQkE,QAASjE,KAAKoC,MAAtB,c,GAhBmBxB,aCIvB4M,G,wDACJ,WAAYvN,GAAQ,IAAD,8BACjB,cAAMA,IAqBRwN,aAAe,SAACtD,GACd,EAAKhH,SAAS,CACZrC,aAAcqJ,EAAQ5I,OAAOjD,SAxBd,EA2BnB8D,KAAO,WACL,EAAKnC,MAAMyN,gBAAgB,EAAK1M,MAAMF,cACtC,EAAKb,MAAMoC,QAAQC,KAAK,kBA3BxB,EAAKtB,MAAQ,CACXF,aAAcb,EAAMa,cAHL,E,0CAOnB,WACE,OACE,yBAAKf,UAAU,oBACb,6BACE,4DACA,iCACE,2BAAOmM,aAAclM,KAAKC,MAAMa,aAAcwD,SAAUtE,KAAKyN,aAAalI,KAAKvF,SAEjF,6BAASD,UAAW,YAClB,4BAAQ2E,UAAW1E,KAAKgB,MAAMF,aAAcf,UAAYC,KAAKgB,MAAMF,aAA2B,GAAZ,UAAgBmD,QAASjE,KAAKoC,KAAKmD,KAAKvF,OAA1H,e,GAjBkBY,cA2CfG,eAJS,SAAAC,GAAK,MAAK,CAChCF,aAAcE,EAAMC,YAAYC,gBAAgBC,QAGV,CAAEuM,gBClDlB,SAAAvM,GAAI,MAAK,CAC/BvC,KAAMiG,EACN1D,UDgDaJ,CAA8CyM,GE9CvDG,G,kKACJ,WACE,OACE,6BACE,6BAAM3N,KAAK4N,iB,wBAKjB,WACE,OAAQ,yBAAK7N,UAAU,eAEnBC,KAAKC,MAAM4N,aAAaC,UAAU/K,KAAI,SAAAgL,GAAW,OAAK,6BACpD,4BAAQhO,UAAU,+BAA+BgO,EAAYC,WAC5DD,EAAY1E,OAAOtG,KAAI,SAAAsG,GAAM,OAC3B,yBAAKtJ,UAAU,eACd,yBAAKA,UAAU,eAAesJ,EAAOlI,MACrC,yBAAKpB,UAAU,gBAAgBiK,EAAUX,EAAOzH,MAAO,sB,GAjBhDhB,cA+CNG,eApBS,SAAAC,GACtB,IAAMoI,EAAUpI,EAAMC,YAAY2D,YAAYwE,QACxCyE,EAAe,GAcrB,OAbAzE,EAAQ6E,SAAQ,SAAA5E,GACd,IAAM3D,EAAQmI,EAAaK,WAAU,SAACH,GAAD,OAAiBA,EAAYC,YAAc3E,EAAOR,MAAMgB,SACzFnE,EAAQ,EACVmI,EAAavL,KAAK,CAChB0L,UAAW3E,EAAOR,MAAMgB,MACxBP,WAAYD,EAAOR,MAAMS,WACzBD,OAAQ,CAACA,KAGXwE,EAAanI,GAAO2D,OAAO/G,KAAK+G,MAI7B,CACLwE,kBAGW9M,CAAyB4M,G,8CChCzB/I,GAdK,WAAqC,IAApC5D,EAAmC,uDAJ5B,CAC1BwC,gBAAiB,GACjB4F,QAAS,IAEkC+E,EAAW,uCACtD,OAAQA,EAAOvP,MACb,KAAKiG,EACH7D,EAAMwC,gBAAkB2K,EAAO3K,iBAAmB,GAClD,MACF,KAAKqB,EACCsJ,EAAO9E,QACTrI,EAAMoI,QAAQ9G,KAAK6L,EAAO9E,QAIhC,OAAO8D,OAAOC,OAAO,GAAIpM,ICJZE,GARS,WAAqC,IAApCF,EAAmC,uDAHhC,CAC1BG,KAAM,IAEyCgN,EAAW,uCAC1D,OAAQA,EAAOvP,MACb,KAAKiG,EACH7D,EAAMG,KAAOgN,EAAOhN,MAAQ,kCAEhC,OAAOgM,OAAOC,OAAO,GAAIpM,ICRrBsK,GAASC,EAAQ,IACjB6C,GAAe,iBAAO,CACxB5E,QAAS,CAAC,CACRtF,GAAIoH,KACJzB,MAAO,qBACPP,WAAY,GACZ,CACApF,GAAIoH,KACJzB,MAAO,qBACPP,WAAY,GACZ,CACApF,GAAIoH,KACJzB,MAAO,qBACPP,WAAY,MAYHC,GARQ,WAAqC,IAApCvI,EAAmC,uDAA3BoN,KAAgBD,EAAW,uCACzD,OAAQA,EAAOvP,MACb,KAAKiG,EACH7D,EAAMwI,QAAU2E,EAAOzE,QAE3B,OAAOyD,OAAOC,OAAO,GAAIpM,ICnBZqN,8BAAgB,CAC7BzJ,eACA1D,mBACAqI,oBCCI+E,GAAmBC,+BAAoB,IAW9BC,GAVE,SAAAC,GAAkB,OAAIC,uBACrCL,2BAAgB,CACdpN,iBAEFwN,EATgB,WAChB,IAAME,EAAkBC,aAAaC,QAAQ,SAC7C,OAAOC,KAAKC,MAAMJ,GAOGK,QAAcC,EACnCX,GACEY,2BAAgBC,SCgELC,G,kDA/Db,WAAYnP,GAAQ,IAAD,8BACjB,cAAMA,IAyBRoP,UAAY,SAACrO,GACX,IAAM2N,EAAkBG,KAAKQ,UAAUtO,GACvC4N,aAAaW,QAAQ,QAASZ,IA1B9B,EAAK3N,MAAQ,CACXwO,kBAAkB,GAHH,E,qDAOnB,WAAqB,IAAD,OACMZ,aAAaC,QAAQ,UACtBlI,OAAO8I,QAAQ,0DACpCzP,KAAK0P,MAAQlB,IAAS,IAEtBxO,KAAK0P,MAAQlB,IAAS,GACtBI,aAAavI,WAAW,UAE1BrG,KAAKmD,SAAS,CACZqM,kBAAkB,IAEpBxP,KAAK0P,MAAMC,WAAU,WACnBhJ,OAAOiJ,eAAiB,SAACxD,GACvB,IAAMpL,EAAQ,EAAK0O,MAAMG,WACzB,EAAKR,UAAUrO,S,oBAUrB,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEd,gBAAgB,GAEdF,KAAKgB,MAAMwO,iBAGX,kBAACM,EAAA,EAAD,CAAUJ,MAAO1P,KAAK0P,OACpB,6BACE,kBAAC,EAAD,CAAQ3P,UAAW,WACnB,6BAASA,UAAW,QAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgQ,OAAK,EAACC,KAAK,IAAIC,UAAWxO,IACjC,kBAAC,IAAD,CAAOuO,KAAK,UAAUC,UAAWtC,IACjC,kBAAC,IAAD,CAAOqC,KAAK,mBAAmBC,UAAW3H,IAC1C,kBAAC,IAAD,CAAO0H,KAAK,gBAAgBC,UAAW9N,IACvC,kBAAC,IAAD,CAAO6N,KAAK,mBAAmBC,UAAW1C,IAC1C,kBAAC,IAAD,CAAOyC,KAAK,oBAAoBC,UAAWzC,IAC3C,kBAAC,IAAD,CAAUvC,KAAK,KAAKvJ,GAAG,QAG3B,kBAAC,EAAD,CAAQ3B,UAAW,kBAhBvBkP,Q,GAvCMrO,aCNZsP,GAAcC,QACW,cAA7BxJ,OAAOyJ,SAASC,UAEe,UAA7B1J,OAAOyJ,SAASC,UAEhB1J,OAAOyJ,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTjN,MAAK,SAAAqN,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9P,QACfyP,UAAUC,cAAcO,WAK1BhI,QAAQiI,IAAI,6CAKZjI,QAAQiI,IAAI,4CAMrBxN,OAAM,SAAAC,GACLsF,QAAQtF,MAAM,4CAA6CA,MC1EjEwN,IAASC,OAAO,kBAAC,GAAD,MAAQrG,SAASsG,eAAe,SDejC,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIa,IAAIC,oBAAwB5K,OAAOyJ,UAC3CoB,SAAW7K,OAAOyJ,SAASoB,OAIvC,OAGF7K,OAAO8K,iBAAiB,QAAQ,WAC9B,IAAMjB,EAAK,UAAMe,oBAAN,sBAEPrB,KAiDV,SAAiCM,GAE/BkB,MAAMlB,GACHjN,MAAK,SAAAoO,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CtB,UAAUC,cAAcsB,MAAMzO,MAAK,SAAAqN,GACjCA,EAAaqB,aAAa1O,MAAK,WAC7BoD,OAAOyJ,SAAS8B,eAKpB3B,GAAgBC,MAGnB9M,OAAM,WACLuF,QAAQiI,IACN,oEArEAiB,CAAwB3B,GAIxBC,UAAUC,cAAcsB,MAAMzO,MAAK,WACjC0F,QAAQiI,IACN,gHAMJX,GAAgBC,OCzCxB4B,K","file":"static/js/main.bdeccef3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.622bb7a1.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/albird.aab060a4.svg\";","import React, { Component } from 'react';\r\nimport Particles from 'react-particles-js'\r\nimport logo from './bg.jpeg';\r\nimport './background.css';\r\nconst particles = {\r\n    number: {\r\n      value: 100,\r\n      density: {\r\n        enable: false,\r\n        value_area: 3200\r\n      }\r\n    },\r\n    color: {\r\n      value: \"#0FF\"\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n      stroke: {\r\n        width: 0,\r\n        color: \"#000000\"\r\n      },\r\n      polygon: {\r\n        nb_sides: 5\r\n      },\r\n      image: {\r\n        src: \"\",\r\n        width: 100,\r\n        height: 100\r\n      }\r\n    },\r\n    opacity: {\r\n      value: 1,\r\n      random: true,\r\n      anim: {\r\n        enable: 1,\r\n        speed: 10,\r\n        opacity_min: .5,\r\n        sync: !1\r\n      }\r\n    },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n        enable: !1,\r\n        speed: 20,\r\n        size_min: 1,\r\n        sync: true\r\n      }\r\n    },\r\n    line_linked: {\r\n      enable: !0,\r\n      distance: 120,\r\n      color: \"#FF0\",\r\n      opacity: .6,\r\n      width: 1,\r\n    },\r\n  };\r\nclass Background extends Component {\r\n  render() {\r\n    return (\r\n      <div className={'particles background'}>\r\n        { this.props.showBackground && <Particles\r\n          params={{\r\n            particles,\r\n          }}\r\n          style={{\r\n            position: 'fixed',\r\n            width: '100%',\r\n            height: '100%',\r\n            background: '#1a1a1a',\r\n            backgroundImage: `url(${logo})`,\r\n            backgroundSize: 'cover',\r\n            pointerEvents: 'none',\r\n          }}\r\n        /> }\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Background;\r\n","import React, { Component } from 'react';\r\nimport logo from './albird.svg'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n     <header className={this.props.className}>\r\n       <img width={24}  height={24} src={logo}/>\r\n       <span>{this.props.activityName}</span>\r\n     </header>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  activityName: state.dataReducer.activitySetting.name,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);","import React from 'react';\r\n\r\nconst Footer = (props) => (\r\n      <footer className={props.className}>\r\n        ©{new Date().getFullYear()}\r\n        <span> <a target='_blank' href='http://wangbaiyuan.cn'>Baiyuan Wang</a> </span>\r\n        All Rights Reversed.\r\n        <span>  <a target='_blank' href='https://github.com/geekeren/Magpie-LuckyDraw'>Github</a> </span>\r\n      </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Link\r\n} from 'react-router-dom'\r\nimport './start.css';\r\n\r\nclass Start extends Component {\r\n  render() {\r\n    return (\r\n      <div><Link to=\"/activity-setting\" className=\"creat_new_activity\">创建一个抽奖活动</Link></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Start;\r\n","export default {\r\n  SET_LOTTERY_POOL: 'SET_LOTTERY_POOL',\r\n  ADD_WINNER: 'ADD_WINNER',\r\n  SET_ACTIVITY_NAME: 'SET_ACTIVITY_NAME',\r\n  SET_LOTTERY_SETTING: 'SET_LOTTERY_SETTING'\r\n}","export default class Participant {\r\n  constructor( name, phone) {\r\n    this.name = name;\r\n    this.phone = phone;\r\n  }\r\n  static fromString(str) {\r\n    const array = str.split(/\\t+|\\s+/, 2);\r\n    if(array[0] && array[1]) {\r\n      if (!(/^[1][3-9][0-9]{9}$/.test(array[1]))) {\r\n        throw new Error(`'${array[0]}'的手机号有误: 请输入11位数字`);\r\n      }\r\n      return new Participant(array[0], array[1]);\r\n    }\r\n    throw new Error(`'${str}' 无效: 姓名和手机号都需要`);\r\n  }\r\n  static participantToString(participant) {\r\n    return `${participant.name}\\t${participant.phone}`;\r\n  }\r\n  toString() {\r\n    return `${this.name}\\t${this.phone}`;\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { connect } from 'react-redux';\r\nimport { setLotteryPool } from '../../redux/actions/lotteryPool';\r\nimport Participant from \"../../model/Participant\";\r\nimport mockParticipants from \"../../_data/mockParticipants\";\r\nimport './lottery-pool.css'\r\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass LotteryPool extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: props.allParticipants && props.allParticipants.length > 0 ? '' : '抽奖池为空！',\r\n      allParticipantsInput: this.props.allParticipants.map(participant => Participant.participantToString(participant)).join(\"\\n\")\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.verifyParticipants();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lottery-pool\">\r\n        <header>抽奖池设置</header>\r\n        <section>每一行表示一名参与者（格式：‘姓名 手机号’）\r\n          <span className={'load_demo'} >\r\n            <FontAwesomeIcon icon={faQuestionCircle} />\r\n            <a onClick={this.loadDemoData}>加载示例数据</a>\r\n          </span>\r\n        </section>\r\n        <div id=\"input_container\">\r\n          <textarea\r\n            id=\"nameList\"\r\n            type=\"text\"\r\n            multiple\r\n            required\r\n            placeholder=\"郭晓 13800138000\"\r\n            value={this.state.allParticipantsInput}\r\n            onChange={(event) => this.onTextChange(event.target.value)}\r\n            style={{ outlineColor: this.state.error ? '#ff5417' : '#50c617' }}\r\n          />\r\n          <div className={'notice_msg'}>\r\n            {this.state.error && <span className={'err_msg'}>{this.state.error}</span>}\r\n            {this.state.validParticipantCount &&\r\n            <div>参与者总数：{this.state.validParticipantCount}</div>\r\n            }\r\n          </div>\r\n        </div>\r\n        <section className={'next-btn'}>\r\n          <button disabled={!!this.state.error} className={!!this.state.error ? \"disable\" : ''}\r\n                  onClick={this.saveNameList}>NEXT\r\n          </button>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  next = () => {\r\n    this.props.history.push(\"/lottery-setting\");\r\n  };\r\n\r\n  verifyParticipantsInput = (value) => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const allParticipants = value.split(\"\\n\")\r\n          .filter(item => !!item || item.replace(/(^s*)|(s*$)/g, \"\").length !== 0)\r\n          .map(item => Participant.fromString(item));\r\n        resolve(allParticipants);\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    });\r\n\r\n  }\r\n  onTextChange = (value) => {\r\n    this.setState({\r\n      allParticipantsInput: value,\r\n    }, () => {\r\n      this.verifyParticipants();\r\n    })\r\n  };\r\n  saveNameList = () => {\r\n    this.verifyParticipantsInput(this.state.allParticipantsInput)\r\n      .then(allParticipants => {\r\n        this.props.setLotteryPool(allParticipants);\r\n        this.next();\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          error\r\n        });\r\n      })\r\n  };\r\n\r\n  loadDemoData = () => {\r\n    this.onTextChange(mockParticipants);\r\n  };\r\n\r\n  verifyParticipants() {\r\n    this.verifyParticipantsInput(this.state.allParticipantsInput)\r\n      .then((allParticipants) => {\r\n        if (allParticipants.length > 0) {\r\n          this.setState({\r\n            error: '',\r\n            validParticipantCount: allParticipants.length\r\n          });\r\n        } else {\r\n          this.setState({\r\n            error: '抽奖池为空！'\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          error: error.message\r\n        });\r\n      })\r\n  }\r\n}\r\n\r\nLotteryPool.propTypes = {\r\n  setLotteryPool: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  allParticipants: state.dataReducer.lotteryPool.allParticipants,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setLotteryPool })(LotteryPool);\r\n","const participants =\r\n`杨幂\t13110000000\r\n李易峰\t13110000001\r\n李宇春\t13110000002\r\n张靓颖\t13110000003\r\n周笔畅\t13110000004\r\n韩雪\t13110000005\r\n范冰冰\t13110000006\r\n赵薇\t13110000007\r\n马苏\t13110000008\r\n李小璐\t13110000009\r\n刘涛\t13110000010\r\n林依晨\t13110000011\r\n陈乔恩\t13110000012\r\n容祖儿\t13110000013\r\n林心如\t13110000014\r\n`;\r\n\r\nexport default participants;\r\n","import Action from './_actions'\r\nconst setLotteryPool = allParticipants => ({\r\n  type: Action.SET_LOTTERY_POOL,\r\n  allParticipants\r\n});\r\n\r\nconst addWinner = winner => ({\r\n  type: Action.ADD_WINNER,\r\n  winner\r\n});\r\n\r\nexport {\r\n  setLotteryPool,\r\n  addWinner\r\n}","export default class DrawService {\r\n\r\n  static instance;\r\n\r\n  constructor() {\r\n    this.noDuplicate = true;\r\n    this.isRolling = false;\r\n    this.isPickBlocked = false;\r\n  }\r\n\r\n  static from(all) {\r\n    if (!DrawService.instance) {\r\n      DrawService.instance = new DrawService();\r\n    }\r\n    DrawService.instance.all = all;\r\n    return DrawService.instance;\r\n  }\r\n\r\n  rollUp() {\r\n    if (!this.isRolling) {\r\n      clearInterval(this.timer);\r\n      if (this.all.length === 0) {\r\n        throw new Error(\"No item in pool\");\r\n      }\r\n      this.isRolling = true;\r\n      this.timer = setInterval(this.change.bind(this), 80);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  removeItem(oneItemIndex) {\r\n    this.all.splice(oneItemIndex, 1);\r\n  }\r\n\r\n  change() {\r\n    const index = Math.floor(Math.random() * this.all.length);\r\n    this.currentlySelectedIndex = index;\r\n    this.currentlySelectedItem = this.all[index];\r\n    this.onSelectedChangedCallback(this.currentlySelectedItem);\r\n  }\r\n\r\n  setOnSelectedChangedCallback(callback) {\r\n    this.onSelectedChangedCallback = callback;\r\n    return this;\r\n  }\r\n  setOnPickBlockedChangedCallback(callback) {\r\n    this.onPickBlockedChangedCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setNoDuplicate(noDuplicate = true) {\r\n    this.noDuplicate = noDuplicate;\r\n    return this;\r\n  }\r\n\r\n  setPickBlocked(blocked) {\r\n    this.isPickBlocked = blocked;\r\n    this.onPickBlockedChangedCallback(blocked);\r\n  }\r\n  pickOneThenDo(callback) {\r\n\r\n    if (!this.isPickBlocked) {\r\n      this.setPickBlocked(true);\r\n      setTimeout((() => {\r\n        clearInterval(this.timer);\r\n        if (this.noDuplicate) {\r\n          this.removeItem(this.currentlySelectedIndex);\r\n        }\r\n        callback(this.currentlySelectedItem);\r\n        this.isRolling = false;\r\n        this.setPickBlocked(false);\r\n      }).bind(this), 1000, this);\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nexport default (phone, symbol) => {\r\n  return (<div>\r\n          {phone.substr(0, 3)}\r\n          <span class='mask'>{symbol}</span>\r\n          {phone.substr(7, 11)}\r\n    </div> );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst $ = window.$;\r\n\r\nclass TagCloud extends React.Component {\r\n  componentDidMount() {\r\n    const displayTags = this.props.tags.length > 100 ? this.props.tags.slice(0, 100) : this.props.tags;\r\n    const entries = displayTags.map(tag => ({\r\n      label: tag\r\n    }));\r\n    const settings = {\r\n      entries: entries,\r\n      width: 1500,\r\n      height: 1024,\r\n      radius: '65%',\r\n      radiusMin: 75,\r\n      bgDraw: false,\r\n      opacityOver: 0.95,\r\n      opacityOut: 0.05,\r\n      opacitySpeed: 6,\r\n      fov: 800,\r\n      speed: 0.2,\r\n      fontFamily: 'Oswald, Arial, sans-serif',\r\n      fontSize: '16',\r\n      fontColor: '#eee',\r\n      fontWeight: 'normal',\r\n      fontStyle: 'normal',\r\n      fontStretch: 'normal',\r\n      fontToUpperCase: false\r\n    };\r\n    this.$el = $(this.el);\r\n    this.$el.svg3DTagCloud( settings );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"tag-cloud\" ref={el => this.el = el} />\r\n    );\r\n  }\r\n}\r\nTagCloud.propTypes = {\r\n  tags: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TagCloud;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DrawService from \"../../service/DrawService\";\r\nimport { addWinner } from '../../redux/actions/lotteryPool';\r\nimport maskPhone from '../../utils/phone_mask';\r\nimport { connect } from 'react-redux';\r\nimport TagCloud from \"../common/tag-cloud\";\r\nimport './lottery-drawing.css'\r\n\r\nclass LotteryDrawing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedParticipant: {},\r\n      currentPrize: '',\r\n      isPrizeChanged: false,\r\n      btnDisabled: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"lottery-drawing\"}>\r\n        <div className=\"name-cloud-container\">\r\n          <TagCloud tags={this.props.allParticipants.map(participant => participant.name)}/>\r\n        </div>\r\n        <div>\r\n          <header className={'prize-title'}>\r\n            {this.getTitle()}\r\n          </header>\r\n          <div className={'rolling'}>\r\n            {this.getContent()}\r\n          </div>\r\n          <button className={this.state.btnDisabled ? \"wait\" : \"\"} disabled={this.state.btnDisabled} onClick={this.onClick.bind(this)}>{this.getButton()}</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onClick = () => {\r\n    if (this.state.noPrize) {\r\n      this.props.history.push(\"/result\");\r\n    } else {\r\n      if (this.state.isPrizeChanged) {\r\n        this.setState({\r\n          isPrizeChanged: false,\r\n        });\r\n        this.computeCurrentPrize();\r\n        return;\r\n      }\r\n      try {\r\n        if (this.drawService.isRolling) {\r\n          this.drawService.pickOneThenDo((selected) => {\r\n            selected.prize = this.state.currentPrize;\r\n            this.props.addWinner(selected);\r\n            this.computeCurrentPrize();\r\n          })\r\n        } else {\r\n          this.drawService.rollUp();\r\n        }\r\n      } catch (err) {\r\n        console.error(err.message)\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  getCurrentPrize = (next) => {\r\n    const items = this.props.lotteryPool.winners.filter(winner => (winner.prize.id === this.state.currentPrize.id));\r\n    if (!next && (this.state.currentPrize.totalCount - items.length || 0) >= 0 && this.state.currentPrize) {\r\n      if ((this.state.currentPrize.totalCount - items.length || 0) === 0) {\r\n        this.setState({\r\n          isPrizeChanged: true,\r\n        });\r\n      }\r\n      return this.state.currentPrize;\r\n    }\r\n\r\n    return this.props.lotteryDrawing.setting.find((lottery) => {\r\n        const items = this.props.lotteryPool.winners.filter(winner => (winner.prize.id === lottery.id));\r\n        if ((lottery.totalCount - items.length || 0) <= 0) {\r\n          return false;\r\n        }\r\n        return true\r\n      }\r\n    );\r\n  }\r\n  computeCurrentPrize = () => {\r\n    const currentPrize = this.getCurrentPrize(this.state.isPrizeChanged);\r\n    if (currentPrize) {\r\n      const existingCountOfCurrentPrize = this.props.lotteryPool.winners.filter(winner => winner.prize.id === currentPrize.id).length;\r\n      this.setState({\r\n        currentPrize,\r\n        existingCountOfCurrentPrize\r\n      });\r\n    } else {\r\n      this.setState({\r\n        noPrize: true\r\n      });\r\n    }\r\n    return currentPrize;\r\n  };\r\n  getTitle = () => {\r\n    if (this.state.existingCountOfCurrentPrize === 0 && !this.state.isPrizeChanged) {\r\n      return `${this.state.currentPrize.title}(${this.state.currentPrize.totalCount}名)`\r\n    } else if(this.state.noPrize){\r\n      return \"\";\r\n    }\r\n    return `${this.state.currentPrize.title}(${this.state.existingCountOfCurrentPrize} / ${this.state.currentPrize.totalCount})`\r\n  };\r\n\r\n  getContent = () => {\r\n    if (!this.state.selectedParticipant.phone || (this.state.existingCountOfCurrentPrize === 0 && !this.drawService.isRolling && !this.state.isPrizeChanged)) {\r\n      return \"等待开奖\";\r\n    } else if(this.state.noPrize){\r\n      return \"抽奖结束\";\r\n    }\r\n    return (<div className=\"selectedParticipant\">\r\n      <div className=\"name\">{this.state.selectedParticipant.name}</div>\r\n      <div className=\"phone\">{maskPhone(this.state.selectedParticipant.phone, '😝😝😝😝')}</div>\r\n    </div>)\r\n  };\r\n\r\n  getButton = () => {\r\n    if (this.state.noPrize) {\r\n      return \"抽奖结果\";\r\n    } else if (this.drawService) {\r\n      return this.drawService.isRolling ? \"stop\" : (this.state.isPrizeChanged ? \"next\" : \"start\")\r\n    }\r\n      return '';\r\n  };\r\n\r\n  launchFullscreen(element) {\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const totalLotteryCount = this.props.lotteryDrawing.setting.reduce((sum, l) => (sum + l.totalCount), 0);\r\n    if (this.props.allParticipants.length < totalLotteryCount) {\r\n      alert(\"奖项数大于参与者数\");\r\n      this.props.history.goBack();\r\n      return ;\r\n    }\r\n    this.launchFullscreen(document.documentElement);\r\n    this.drawService = DrawService.from(this.props.allParticipants)\r\n      .setOnSelectedChangedCallback((selectedItem) => {\r\n        this.setState({\r\n          selectedParticipant: selectedItem,\r\n        });\r\n      })\r\n      .setNoDuplicate(true)\r\n      .setOnPickBlockedChangedCallback((blocked) => {\r\n        this.setState({\r\n          btnDisabled: blocked\r\n        });\r\n      });\r\n    this.computeCurrentPrize();\r\n  }\r\n}\r\n\r\nLotteryDrawing.propTypes = {\r\n  addWinner: PropTypes.func.isRequired,\r\n  // currentPrize: PropTypes.shape(),\r\n};\r\nconst mapStateToProps = state => ({\r\n  allParticipants: state.dataReducer.lotteryPool.allParticipants,\r\n  lotteryPool: state.dataReducer.lotteryPool,\r\n  lotteryDrawing: state.dataReducer.lotteryDrawing\r\n});\r\nexport default connect(mapStateToProps, { addWinner })(LotteryDrawing);\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faTrashAlt, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { SortableContainer, SortableElement, arrayMove, SortableHandle } from 'react-sortable-hoc';\r\nimport { setLottery } from '../../redux/actions/lotteryDrawing';\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nconst DragHandle = SortableHandle(() => <FontAwesomeIcon icon={faBars} size={16} className={'drag-handle'}/>);\r\nconst SortableList = SortableContainer(({ items, onItemChange }) => {\r\n  const SortableItem = SortableElement(({ value, sortIndex }) =>\r\n    <div key={sortIndex} className=\"lottery-item\">\r\n      <DragHandle/>\r\n      <div className=\"lottery-item-name\">\r\n        <input\r\n          type={'text'}\r\n          defaultValue={value.title}\r\n          onBlur={e => {\r\n            items.find(lottery => lottery.id === value.id).title = e.target.value\r\n            onItemChange(items)\r\n          }}\r\n        /></div>\r\n      <div className=\"lottery-item-count\">\r\n        <input\r\n          type={'number'}\r\n          defaultValue={value.totalCount}\r\n          onBlur={e => {\r\n            items.find(lottery => lottery.id === value.id).totalCount = parseInt(e.target.value)\r\n            onItemChange(items)\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"lottery-item-remove\"\r\n           onClick={() => {\r\n             items = items.filter(lottery => lottery.id !== value.id)\r\n             onItemChange(items)\r\n           }}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faTrashAlt}/>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      {items.map((value, index) => (\r\n        <SortableItem\r\n          key={`item-${index}`}\r\n          index={index}\r\n          value={value}\r\n          sortIndex={index}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nclass LotteryEditableItem extends React.Component {\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    setTimeout(() => {\r\n      if (this.lotteryItemBodyRef) {\r\n        this.lotteryItemBodyRef.scrollTo(this.lotteryItemBodyRef.scrollHeight, this.lotteryItemBodyRef.scrollHeight);\r\n      }\r\n    }, 100)\r\n  }\r\n\r\n  onSortEnd = ({ oldIndex, newIndex }) => {\r\n    this.props.setLottery(arrayMove(this.props.lotteries, oldIndex, newIndex));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={\"lottery-item-body\"} ref={el => this.lotteryItemBodyRef = el}>\r\n          <SortableList\r\n            useDragHandle\r\n            items={this.props.lotteries}\r\n            onItemChange={items => this.props.setLottery(Object.assign([], items))}\r\n            onSortEnd={this.onSortEnd.bind(this)}/>\r\n        </div>\r\n        <div className=\"lottery-item-add\"\r\n             onClick={() => {\r\n               const items = this.props.lotteries;\r\n               items.push({\r\n                 id: uuidv4(),\r\n                 title: '幸运奖',\r\n                 totalCount: 3,\r\n               })\r\n               this.props.setLottery(Object.assign([], items))\r\n             }}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faPlusCircle}/>\r\n          添加奖项\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLotteryEditableItem.propTypes = {\r\n  lotteries: PropTypes.array,\r\n  setLottery: PropTypes.func,\r\n};\r\nconst mapStateToProps = state => ({\r\n  lotteries: state.dataReducer.lotteryDrawing.setting\r\n});\r\n\r\nexport default connect(mapStateToProps, { setLottery })(LotteryEditableItem);\r\n","import Action from './_actions'\r\nconst setLottery = lottery => ({\r\n  type: Action.SET_LOTTERY_SETTING,\r\n  lottery\r\n});\r\n\r\nexport {\r\n  setLottery\r\n}","import React from \"react\";\r\nimport './lottery-edit.css';\r\nimport LotteryEditableTable from './lottery-editable-table';\r\n\r\nclass LotteryEdit extends React.Component {\r\n  render() {\r\n    return (<div>\r\n      <div className=\"prizes-container\">\r\n        <div className=\"lottery-items-header\">\r\n          <div className=\"lottery-item-name\">奖项</div>\r\n          <div className=\"lottery-item-count\">数量</div>\r\n        </div>\r\n        <LotteryEditableTable />\r\n      </div>\r\n\r\n    </div>)\r\n  }\r\n}\r\nexport default  LotteryEdit;\r\n\r\n","import React, { Component } from 'react';\r\nimport './lottery-setting.css'\r\nimport LotteryEdit from \"../lottery-edit/index\";\r\n\r\nclass LotterySetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: '',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lottery-setting\">\r\n        <header>奖项设置</header>\r\n        <section className=\"lottery-edit\">\r\n          <LotteryEdit/>\r\n        </section>\r\n        <section className={'next-btn'}>\r\n          <button onClick={this.next}>NEXT</button>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  next = () => {\r\n    this.props.history.push(\"/lottery-drawing\")\r\n  }\r\n}\r\n\r\nexport default LotterySetting;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setActivityName } from '../../redux/actions/activitySetting'\r\nimport './activity-setting.css'\r\n\r\nclass ActivitySetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activityName: props.activityName\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"activity-setting\">\r\n        <div>\r\n          <header>活动名称</header>\r\n          <section>\r\n            <input defaultValue={this.props.activityName} onChange={this.onNameChange.bind(this)}/>\r\n          </section>\r\n          <section className={'next-btn'}>\r\n            <button disabled={!this.state.activityName} className={!this.state.activityName ? \"disable\" : ''} onClick={this.next.bind(this)}>NEXT</button>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  onNameChange = (element) => {\r\n    this.setState({\r\n      activityName: element.target.value\r\n    })\r\n  };\r\n  next = () => {\r\n    this.props.setActivityName(this.state.activityName);\r\n    this.props.history.push(\"/lottery-pool\")\r\n  }\r\n\r\n}\r\n\r\nActivitySetting.propTypes = {\r\n  setActivityName: PropTypes.func.isRequired,\r\n  activityName: PropTypes.string.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  activityName: state.dataReducer.activitySetting.name,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setActivityName })(ActivitySetting);\r\n","import Action from './_actions'\r\nconst setActivityName = name => ({\r\n  type: Action.SET_ACTIVITY_NAME,\r\n  name\r\n});\r\nexport {\r\n  setActivityName\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport maskPhone from '../../utils/phone_mask';\r\nimport './result.css';\r\n\r\nclass Result extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>{this.winnerList()}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  winnerList() {\r\n    return (<div className=\"result_part\">\r\n      {\r\n        this.props.winnerGroups.reverse().map(winnerGroup => (<div>\r\n          <header className=\"special_prize_result_header\">{winnerGroup.prizeName}</header>\r\n          {winnerGroup.winner.map(winner =>\r\n            (<div className=\"result_item\">\r\n              <div className=\"result_name\">{winner.name}</div>\r\n              <div className=\"result_phone\">{maskPhone(winner.phone, '****')}</div>\r\n            </div>)\r\n          )}\r\n\r\n        </div>))\r\n      }\r\n    </div>)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const winners = state.dataReducer.lotteryPool.winners;\r\n  const winnerGroups = [];\r\n  winners.forEach(winner => {\r\n    const index = winnerGroups.findIndex((winnerGroup) => winnerGroup.prizeName === winner.prize.title);\r\n    if (index < 0) {\r\n      winnerGroups.push({\r\n        prizeName: winner.prize.title,\r\n        totalCount: winner.prize.totalCount,\r\n        winner: [winner]\r\n      })\r\n    } else {\r\n      winnerGroups[index].winner.push(winner);\r\n    }\r\n\r\n  });\r\n  return {\r\n    winnerGroups,\r\n  }\r\n};\r\nexport default connect(mapStateToProps)(Result);\r\n","import Action from '../actions/_actions'\r\n\r\nconst initialState = () => ({\r\n  allParticipants: [],\r\n  winners: []\r\n});\r\nconst lotteryPool = (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case Action.SET_LOTTERY_POOL:\r\n      state.allParticipants = action.allParticipants || [];\r\n      break;\r\n    case Action.ADD_WINNER:\r\n      if (action.winner) {\r\n        state.winners.push(action.winner);\r\n      }\r\n\r\n  }\r\n  return Object.assign({}, state);\r\n};\r\n\r\nexport default lotteryPool\r\n","import Action from '../actions/_actions'\r\n\r\nconst initialState = () => ({\r\n  name: \"\",\r\n});\r\nconst activitySetting = (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case Action.SET_ACTIVITY_NAME:\r\n      state.name = action.name || \"Magpie 抽奖平台\";\r\n  }\r\n  return Object.assign({}, state);\r\n};\r\n\r\nexport default activitySetting","import Action from '../actions/_actions'\r\n\r\nconst uuidv4 = require('uuid/v4');\r\nconst initialState = () => ({\r\n    setting: [{\r\n      id: uuidv4(),\r\n      title: '三等奖',\r\n      totalCount: 3,\r\n    },{\r\n      id: uuidv4(),\r\n      title: '二等奖',\r\n      totalCount: 2,\r\n    },{\r\n      id: uuidv4(),\r\n      title: '一等奖',\r\n      totalCount: 1,\r\n    }]\r\n  }\r\n);\r\nconst lotteryDrawing = (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case Action.SET_LOTTERY_SETTING:\r\n      state.setting = action.lottery;\r\n  }\r\n  return Object.assign({}, state);\r\n};\r\n\r\nexport default lotteryDrawing","import { combineReducers } from 'redux';\r\nimport lotteryPool from './lotteryPool';\r\nimport activitySetting from './activitySetting';\r\nimport lotteryDrawing from './lotteryDrawing';\r\n\r\nexport default combineReducers({\r\n  lotteryPool,\r\n  activitySetting,\r\n  lotteryDrawing,\r\n});\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\r\nimport dataReducer from '../reducers';\r\n\r\nconst loadState = () => {\r\n  const serializedState = localStorage.getItem('state');\r\n  return JSON.parse(serializedState);\r\n};\r\nconst composeEnhancers = composeWithDevTools({});\r\nconst getStore = recoverFromStorage => createStore(\r\n  combineReducers({\r\n    dataReducer,\r\n  }),\r\n  recoverFromStorage ? loadState() : undefined,\r\n  composeEnhancers(\r\n    applyMiddleware(logger),\r\n  ),\r\n);\r\n\r\nexport default getStore;\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport Background from '../component/background';\r\nimport Header from '../component/header';\r\nimport Footer from '../component/footer';\r\nimport './App.css';\r\nimport Start from \"../component/start\";\r\nimport LotteryPool from \"../component/lottery-pool\";\r\nimport LotteryDrawing from \"../component/lottery-drawing\";\r\nimport LotterySetting from \"../component/lottery-setting\";\r\nimport ActivitySetting from \"../component/activity-setting\";\r\nimport Result from \"../component/result\";\r\nimport Provider from \"react-redux/es/components/Provider\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport getStore from \"../redux/store\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      confirmRecovered: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState && window.confirm('是否恢复上次数据？')) {\r\n      this.store = getStore(true)\r\n    } else {\r\n      this.store = getStore(false)\r\n      localStorage.removeItem('state');\r\n    }\r\n    this.setState({\r\n      confirmRecovered: true,\r\n    })\r\n    this.store.subscribe(() => {\r\n      window.onbeforeunload = (e) => {\r\n        const state = this.store.getState();\r\n        this.saveState(state);\r\n      };\r\n    })\r\n  }\r\n\r\n  saveState = (state) => {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Background\r\n          showBackground={true}\r\n        >\r\n          {!this.state.confirmRecovered ?\r\n            undefined\r\n            :\r\n            <Provider store={this.store}>\r\n              <div>\r\n                <Header className={'header'}/>\r\n                <article className={'main'}>\r\n                  <Switch>\r\n                    <Route exact path='/' component={Start}/>\r\n                    <Route path='/result' component={Result}/>\r\n                    <Route path='/lottery-drawing' component={LotteryDrawing}/>\r\n                    <Route path='/lottery-pool' component={LotteryPool}/>\r\n                    <Route path='/lottery-setting' component={LotterySetting}/>\r\n                    <Route path='/activity-setting' component={ActivitySetting}/>\r\n                    <Redirect from=\"/*\" to=\"/\"/>\r\n                  </Switch>\r\n                </article>\r\n                <Footer className={'footer'}/>\r\n              </div>\r\n            </Provider>\r\n          }\r\n        </Background>\r\n      </BrowserRouter>);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nReactDOM.render(<App/>, document.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}